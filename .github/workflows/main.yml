name: Deploy Flask App

on:
  push:
    branches:
      - main

env:
  HEALTHCHECK_URL: http://34.228.255.233:8080  # Updated port to match .env setting

jobs:
  Build-test-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Create Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          pip install gdown

      - name: Download Model from Google Drive
        run: |
          mkdir -p models
          gdown https://drive.google.com/uc?id=1uw3bfSPDTOAKJusQ16gRfCSS5C9Gl7JS -O models/plant_disease_classification.pth
          ls -lh models/

      - name: Create Production Configuration
        run: |
          echo "FLASK_ENV=production" > .env
          echo "PORT=8080" >> .env

      - name: Run Unit Tests
        run: |
          python -m unittest discover -s tests

      - name: Deploy Flask Application
        run: |
          nohup gunicorn --bind 0.0.0.0:8080 app:app &

  health:
    needs: Build-test-deploy
    runs-on: self-hosted

    steps:
      - name: Health Check
        run: |
          for i in {1..10}; do
            curl -s -o /dev/null -w "%{http_code}" $HEALTHCHECK_URL | grep "200" && echo "Health check passed" && exit 0 || echo "Waiting for service...";
            sleep 5;
          done;
          echo "Health check failed***" && exit 1
